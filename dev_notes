Project Customization Tasks:
    Figuring how the Tool Indicator will be updated when selecting these tools:
        - Brush
        - Create shapes (Best way to keep track of selected btns? Package into a array of booleans?)
        - Eraser

    *Changing UI:
        x Change top-bar into a sidebar [B]
        x Create hover side panel to place colour picker & brush slider
        x Fix canvas height issue
        x Implement toast notifications for bottom layer tools instead  of using the tool Indicator
        x Completed Tool Modal styling
        x Fix sizing issue (Active Tool Indicator)
        x Fix Bucket button styling issues (i.e. indicating selected button)
        x Adapt Modal Content relevant to the selected tool
        - Create a start page where you can choose to get a portrait or landscape canvas
    


    Creating shapes:
        - Button that shows the side panel with shapes to choose from
            x Create a new modal layer div to contain the different shape buttons
            x Fix styling of shape buttons
            x Modify UpdateSelectedTool to not show any content first then selectively activated necessary divs
            in the conditional statements
            - Figure event handling for drawing a straight line (use bools? use two event handles?)



Ideas:
- kleki
- jspaint

Work in progress separator:
// =======================================================================================
<!-- Shapes -->
        <!-- <div class="shapes-dropdown tool">
            <div class="icon-shapes-container">
                <i class="fas fa-shapes" id="shapes" title="Create Shapes"></i>
            </div>
            <ul class="shapes-container">
                <li>
                    <div class="square-container">
                        <i class="far fa-square cursor-tool" id="square" title="Square"></i>
                    </div>
                </li>
                <li>
                    <div class="circle-container">
                        <i class="far fa-circle" id="circle" title="Circle"></i>
                    </div>
                </li>
            </ul>
        </div> -->

// Update active tool display
// function updateToolIndicator(currentTool=undefined) {

//   if (currentTool === 'brush') {
//     toolBools.isEraser = false;

//     activeToolEl.textContent = capitalizeFirstLetter(currentTool);
//     tools.forEach((tool) => {
//       if (tool.id === currentTool) {
//         tool.classList.add('selected-tool');
//       }
//       else {
//         tool.classList.remove('selected-tool');
//       }
//     });

//     currentColor = `#${brushColorBtn.value}`;
//     currentSize = BRUSH_DEFAULT_SIZE;
//     brushSlider.value = BRUSH_DEFAULT_SIZE;
//     displayBrushSize();
//   }
//   else if (currentTool === 'square') {
//     toolBools.isEraser = false;

//     activeToolEl.textContent = capitalizeFirstLetter(currentTool);
//     brushIcon.classList.add('selected-tool');
//     eraser.classList.remove('selected-tool');

//     currentColor = `#${brushColorBtn.value}`;
//     currentSize = 10;
//     brushSlider.value = BRUSH_DEFAULT_SIZE;
//     displayBrushSize();
//   }
//   else if (tool === 'eraser') {
//     toolBools.isEraser = true;
//     toolBools.isBrush = false;
//     toolBools.isSquare = false;

//     activeToolEl.textContent = capitalizeFirstLetter(currentTool);
//     tools.forEach((tool) => {
//       if (tool.id === currentTool) {
//         tool.classList.add('selected-tool');
//       }
//       else {
//         tool.classList.remove('selected-tool');
//       }
//     });

//     currentColor = `#${brushColorBtn.value}`;
//     currentSize = ERASER_DEFAULT_SIZE;
//     brushSlider.value = ERASER_DEFAULT_SIZE;
//     displayBrushSize();
//   }
//   else {
//     tools.forEach((tool) => {
//       tool.classList.remove('selected-tool');
//     });
//     resetTools();

//     currentColor = `#${brushColorBtn.value}`;
//     currentSize = BRUSH_DEFAULT_SIZE;
//     brushSlider.value = BRUSH_DEFAULT_SIZE;
//     displayBrushSize();
//   }
// }